{"version":3,"sources":["Components/CountryPicker/CountryPicker.jsx","Components/Cards/Card/Card.jsx","Components/Cards/Cards.jsx","Components/Charts/BarChart/BarChart.jsx","Components/Charts/LineChart/LineChart.jsx","api/index.js","App.jsx","index.jsx","image.png"],"names":["memo","countries","onChange","Box","mb","Grid","container","justify","FormControl","InputLabel","shrink","htmlFor","Select","native","event","value","target","inputProps","name","id","map","country","key","useStyles","makeStyles","root","minWidth","height","title","fontSize","pos","marginBottom","header","count","lastUpdate","children","classes","item","xs","sm","md","Card","className","CardContent","Typography","color","gutterBottom","variant","component","end","separator","Date","toLocaleDateString","countryData","spacing","confirmed","recovered","deaths","data","barDatasets","backgroundColor","labels","datasets","options","legend","display","text","length","lineLabels","reportDate","lineDatasets","label","total","borderColor","fill","axios","defaults","baseURL","App","useState","setCountry","setData","useEffect","a","get","getData","useCountries","useCountryData","dailyData","useDailyData","onCountryChangeHandler","useCallback","href","data-ribbon","rel","Container","maxWidth","my","textAlign","src","image","alt","ReactDOM","render","StrictMode","CssBaseline","document","getElementById","module","exports"],"mappings":"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","file":"static/js/main.aa067fba.chunk.js","sourcesContent":["import React, { memo } from 'react'\nimport Box from '@material-ui/core/Box'\nimport Grid from '@material-ui/core/Grid'\nimport FormControl from '@material-ui/core/FormControl'\nimport InputLabel from '@material-ui/core/InputLabel'\nimport Select from '@material-ui/core/Select'\n\nconst CountryPicker = ({ countries, onChange }) => {\n  const onChangeHandler = (event) => {\n    const value = event.target.value\n    onChange(value)\n  }\n\n  return (\n    <Box mb={5}>\n      <Grid container justify='center'>\n        <FormControl>\n          <InputLabel shrink htmlFor='location'>\n            Location\n          </InputLabel>\n          <Select\n            native\n            onChange={onChangeHandler}\n            inputProps={{\n              name: 'location',\n              id: 'location',\n            }}>\n            <option value=''>The World</option>\n            {countries.map((country) => (\n              <option value={country} key={country}>\n                {country}\n              </option>\n            ))}\n          </Select>\n        </FormControl>\n      </Grid>\n    </Box>\n  )\n}\n\nexport default memo(CountryPicker)\n","import React, { memo } from 'react'\nimport { makeStyles } from '@material-ui/core/styles'\nimport Grid from '@material-ui/core/Grid'\nimport Card from '@material-ui/core/Card'\nimport CardContent from '@material-ui/core/CardContent'\nimport Typography from '@material-ui/core/Typography'\nimport CountUp from 'react-countup'\n\nconst useStyles = makeStyles({\n  root: {\n    minWidth: 170,\n    height: '100%',\n  },\n  title: {\n    fontSize: 14,\n  },\n  pos: {\n    marginBottom: 12,\n  },\n})\n\nexport default memo(({ header, count, lastUpdate, children }) => {\n  const classes = useStyles()\n\n  return (\n    <Grid item xs={12} sm={4} md='auto'>\n      <Card className={classes.root}>\n        <CardContent>\n          <Typography\n            className={classes.title}\n            color='textSecondary'\n            gutterBottom>\n            {header}\n          </Typography>\n          <Typography variant='h5' component='h2'>\n            <CountUp end={count} separator=',' />\n          </Typography>\n          <Typography className={classes.pos} color='textSecondary'>\n            as of {new Date(lastUpdate).toLocaleDateString()}\n          </Typography>\n          <Typography variant='body2' component='p'>\n            {children}\n          </Typography>\n        </CardContent>\n      </Card>\n    </Grid>\n  )\n})\n","import React, { memo } from 'react'\nimport Box from '@material-ui/core/Box'\nimport Grid from '@material-ui/core/Grid'\nimport Card from './Card/Card'\n\nconst Cards = ({ countryData }) => {\n  if (!countryData) return null\n\n  return (\n    <Box mb={5}>\n      <Grid container justify='center' spacing={2}>\n        <Card\n          header='Infected'\n          count={countryData.confirmed}\n          lastUpdate={countryData.lastUpdate}>\n          Number of active cases of COVID-19.\n        </Card>\n        <Card\n          header='Recovered'\n          count={countryData.recovered}\n          lastUpdate={countryData.lastUpdate}>\n          Number of recoveries from COVID-19.\n        </Card>\n        <Card\n          header='Deaths'\n          count={countryData.deaths}\n          lastUpdate={countryData.lastUpdate}>\n          Number of deaths caused by COVID-19.\n        </Card>\n      </Grid>\n    </Box>\n  )\n}\n\nexport default memo(Cards)\n","import React, { memo } from 'react'\nimport { Bar } from 'react-chartjs-2'\n\nconst BarChart = ({ data }) => {\n  if (!data) return null\n\n  const barLabels = ['Infected', 'Recovered', 'Deaths']\n  const barDatasets = [\n    {\n      data: [data.confirmed, data.recovered, data.deaths],\n      backgroundColor: [\n        'rgba(0,0,255,0.5)',\n        'rgba(0,255,0,0.5)',\n        'rgba(255,0,0,0.5)',\n      ],\n    },\n  ]\n\n  return (\n    <Bar\n      data={{\n        labels: barLabels,\n        datasets: barDatasets,\n      }}\n      options={{\n        legend: { display: false },\n        title: {\n          display: true,\n          text: `Current state in ${data.country}`,\n        },\n      }}\n    />\n  )\n}\n\nexport default memo(BarChart)\n","import React, { memo } from 'react'\nimport { Line } from 'react-chartjs-2'\n\nconst LineChart = ({ data }) => {\n  if (!data.length) return null\n\n  const lineLabels = data.map(({ reportDate }) => reportDate)\n  const lineDatasetConfirmed = {\n    label: 'Infected',\n    data: data.map(({ confirmed }) => confirmed.total),\n    borderColor: 'rgba(0,0,255,1)',\n    fill: true,\n  }\n  const lineDatasetDeaths = {\n    label: 'Deaths',\n    data: data.map(({ deaths }) => deaths.total),\n    borderColor: 'rgba(255,0,0,1)',\n    backgroundColor: 'rgba(255,0,0,0.5)',\n    fill: true,\n  }\n  const lineDatasets = [lineDatasetConfirmed, lineDatasetDeaths]\n\n  return (\n    <Line\n      data={{ labels: lineLabels, datasets: lineDatasets }}\n      options={{\n        title: {\n          display: true,\n          text: 'Current state of the World',\n        },\n      }}\n    />\n  )\n}\n\nexport default memo(LineChart)\n","import axios from 'axios'\nimport { useState, useEffect } from 'react'\n\naxios.defaults.baseURL = 'https://covid19.mathdro.id/api'\n\nexport const useCountries = () => {\n  const [data, setData] = useState([])\n\n  useEffect(() => {\n    const getData = async () => {\n      const { data } = await axios.get('/countries')\n      setData(data.countries.map(({ name }) => name))\n    }\n    getData()\n  }, [])\n\n  return data\n}\n\nexport const useCountryData = (country) => {\n  const [data, setData] = useState(null)\n\n  useEffect(() => {\n    const getData = async () => {\n      const { data } = await axios.get(country ? `/countries/${country}` : '/')\n      setData({\n        country: country,\n        confirmed: data.confirmed.value,\n        recovered: data.recovered.value,\n        deaths: data.deaths.value,\n        lastUpdate: data.lastUpdate,\n      })\n    }\n    getData()\n  }, [country])\n\n  return data\n}\n\nexport const useDailyData = () => {\n  const [data, setData] = useState([])\n\n  useEffect(() => {\n    const getData = async () => {\n      const { data } = await axios.get('/daily')\n      setData(data)\n    }\n    getData()\n  }, [])\n\n  return data\n}\n","import React, { useState, useCallback } from 'react'\nimport Container from '@material-ui/core/Container'\nimport Box from '@material-ui/core/Box'\nimport { CountryPicker, Cards, BarChart, LineChart } from './Components'\nimport { useCountries, useCountryData, useDailyData } from './api'\nimport image from './image.png'\n\nconst App = () => {\n  const [country, setCountry] = useState('')\n  const countries = useCountries()\n  const countryData = useCountryData(country)\n  const dailyData = useDailyData()\n\n  const onCountryChangeHandler = useCallback((value) => {\n    setCountry(value)\n  }, [])\n\n  return (\n    <>\n      <a\n        className='github-fork-ribbon'\n        href='https://github.com/batbrain9392/react-covid-tracker'\n        data-ribbon='GitHub'\n        title='GitHub'\n        target='_blank'\n        rel='noreferrer noopener'>\n        GitHub\n      </a>\n      <Container maxWidth='md'>\n        <Box my={7}>\n          <Box mb={5} textAlign='center'>\n            <img src={image} alt='COVID-19' />\n          </Box>\n          <CountryPicker\n            countries={countries}\n            onChange={onCountryChangeHandler}\n          />\n          <Cards countryData={countryData} />\n          {country ? (\n            <BarChart data={countryData} />\n          ) : (\n            <LineChart data={dailyData} />\n          )}\n        </Box>\n      </Container>\n    </>\n  )\n}\n\nexport default App\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport CssBaseline from '@material-ui/core/CssBaseline'\nimport App from './App'\n\nReactDOM.render(\n  <React.StrictMode>\n    <CssBaseline />\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n)\n","module.exports = __webpack_public_path__ + \"static/media/image.d7265326.png\";"],"sourceRoot":""}