{"version":3,"sources":["Components/Cards/Card/Card.jsx","Components/Cards/Cards.jsx","Components/Chart/BarChart/BarChart.jsx","Components/Chart/LineChart/LineChart.jsx","Components/Chart/Chart.jsx","Components/CountryPicker/CountryPicker.jsx","api/index.js","App.jsx","index.jsx","image.png"],"names":["useStyles","makeStyles","root","minWidth","bullet","display","margin","transform","title","fontSize","pos","marginBottom","memo","header","count","lastUpdate","children","classes","Grid","item","xs","sm","md","Card","className","CardContent","Typography","color","gutterBottom","variant","component","end","separator","Date","toLocaleDateString","theme","flexGrow","countryData","Box","mb","container","justify","spacing","confirmed","recovered","deaths","data","barDatasets","backgroundColor","labels","datasets","options","legend","text","country","length","lineLabels","map","reportDate","lineDatasets","label","total","borderColor","fill","dailyData","countries","onChange","FormControl","InputLabel","shrink","htmlFor","Select","native","event","value","target","inputProps","name","id","key","axios","defaults","baseURL","App","useState","setCountry","setData","useEffect","a","get","getData","useCountries","useCountryData","useDailyData","onCountryChangeHandler","useCallback","Container","my","textAlign","src","image","alt","ReactDOM","render","StrictMode","CssBaseline","document","getElementById","module","exports"],"mappings":"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","file":"static/js/main.35969cc0.chunk.js","sourcesContent":["import React, { memo } from 'react'\nimport { makeStyles } from '@material-ui/core/styles'\nimport Grid from '@material-ui/core/Grid'\nimport Card from '@material-ui/core/Card'\nimport CardContent from '@material-ui/core/CardContent'\nimport Typography from '@material-ui/core/Typography'\nimport CountUp from 'react-countup'\n\nconst useStyles = makeStyles({\n  root: {\n    minWidth: 170,\n  },\n  bullet: {\n    display: 'inline-block',\n    margin: '0 2px',\n    transform: 'scale(0.8)',\n  },\n  title: {\n    fontSize: 14,\n  },\n  pos: {\n    marginBottom: 12,\n  },\n})\n\nexport default memo(({ header, count, lastUpdate, children }) => {\n  const classes = useStyles()\n\n  return (\n    <Grid item xs={12} sm={4} md='auto'>\n      <Card className={classes.root}>\n        <CardContent>\n          <Typography\n            className={classes.title}\n            color='textSecondary'\n            gutterBottom>\n            {header}\n          </Typography>\n          <Typography variant='h5' component='h2'>\n            <CountUp end={count} separator=',' />\n          </Typography>\n          <Typography className={classes.pos} color='textSecondary'>\n            as of {new Date(lastUpdate).toLocaleDateString()}\n          </Typography>\n          <Typography variant='body2' component='p'>\n            {children}\n          </Typography>\n        </CardContent>\n      </Card>\n    </Grid>\n  )\n})\n","import React, { memo } from 'react'\nimport { makeStyles } from '@material-ui/core/styles'\nimport Box from '@material-ui/core/Box'\nimport Grid from '@material-ui/core/Grid'\nimport Card from './Card/Card'\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n  },\n}))\n\nconst Cards = ({ countryData }) => {\n  // console.log({ Cards: countryData })\n  const classes = useStyles()\n  if (!countryData) return null\n\n  return (\n    <Box mb={3}>\n      <Grid container justify='center' className={classes.root} spacing={2}>\n        <Card\n          header='Infected'\n          count={countryData.confirmed}\n          lastUpdate={countryData.lastUpdate}>\n          Number of active cases of COVID-19.\n        </Card>\n        <Card\n          header='Recovered'\n          count={countryData.recovered}\n          lastUpdate={countryData.lastUpdate}>\n          Number of recoveries from COVID-19.\n        </Card>\n        <Card\n          header='Deaths'\n          count={countryData.deaths}\n          lastUpdate={countryData.lastUpdate}>\n          Number of deaths caused by COVID-19.\n        </Card>\n      </Grid>\n    </Box>\n  )\n}\n\nexport default memo(Cards)\n","import React, { memo } from 'react'\nimport { Bar } from 'react-chartjs-2'\n\nconst BarChart = ({ data }) => {\n  if (!data) return null\n\n  const barLabels = ['Infected', 'Recovered', 'Deaths']\n  const barDatasets = [\n    {\n      data: [data.confirmed, data.recovered, data.deaths],\n      backgroundColor: [\n        'rgba(0,0,255,0.5)',\n        'rgba(0,255,0,0.5)',\n        'rgba(255,0,0,0.5)',\n      ],\n    },\n  ]\n\n  return (\n    <Bar\n      data={{\n        labels: barLabels,\n        datasets: barDatasets,\n      }}\n      options={{\n        legend: { display: false },\n        title: {\n          display: true,\n          text: `Current state in ${data.country}`,\n        },\n      }}\n    />\n  )\n}\n\nexport default memo(BarChart)\n","import React, { memo } from 'react'\nimport { Line } from 'react-chartjs-2'\n\nconst LineChart = ({ data }) => {\n  if (!data.length) return null\n\n  const lineLabels = data.map(({ reportDate }) => reportDate)\n  const lineDatasetConfirmed = {\n    label: 'Infected',\n    data: data.map(({ confirmed }) => confirmed.total),\n    borderColor: 'rgba(0,0,255,1)',\n    fill: true,\n  }\n  const lineDatasetDeaths = {\n    label: 'Deaths',\n    data: data.map(({ deaths }) => deaths.total),\n    borderColor: 'rgba(255,0,0,1)',\n    backgroundColor: 'rgba(255,0,0,0.5)',\n    fill: true,\n  }\n  const lineDatasets = [lineDatasetConfirmed, lineDatasetDeaths]\n\n  return <Line data={{ labels: lineLabels, datasets: lineDatasets }} />\n}\n\nexport default memo(LineChart)\n","import React, { memo } from 'react'\n// import Grid from '@material-ui/core/Grid'\nimport BarChart from './BarChart/BarChart'\nimport LineChart from './LineChart/LineChart'\n\nconst Chart = ({ countryData, dailyData }) => {\n  // console.log({ Chart: { dailyData, countryData } })\n\n  return (\n    <>\n      <BarChart data={countryData} />\n      <LineChart data={dailyData} />\n      {/* <Grid container justify='center' alignItems='center' spacing={10}>\n        <Grid item>\n          <BarChart data={countryData} />\n        </Grid>\n        <Grid item>\n          <LineChart data={dailyData} />\n        </Grid>\n      </Grid> */}\n    </>\n  )\n}\n\nexport default memo(Chart)\n","import React, { memo } from 'react'\nimport Box from '@material-ui/core/Box'\nimport Grid from '@material-ui/core/Grid'\nimport FormControl from '@material-ui/core/FormControl'\nimport InputLabel from '@material-ui/core/InputLabel'\nimport Select from '@material-ui/core/Select'\n\nconst CountryPicker = ({ countries, onChange }) => {\n  // console.log({ CountryPicker: countries })\n\n  const onChangeHandler = (event) => {\n    const value = event.target.value\n    onChange(value)\n  }\n\n  return (\n    <Box mb={3}>\n      <Grid container justify='center'>\n        <FormControl>\n          <InputLabel shrink htmlFor='location'>\n            Location\n          </InputLabel>\n          <Select\n            native\n            onChange={onChangeHandler}\n            inputProps={{\n              name: 'location',\n              id: 'location',\n            }}>\n            <option value=''>The World</option>\n            {countries.map((country) => (\n              <option value={country} key={country}>\n                {country}\n              </option>\n            ))}\n          </Select>\n        </FormControl>\n      </Grid>\n    </Box>\n  )\n}\n\nexport default memo(CountryPicker)\n","import axios from 'axios'\nimport { useState, useEffect } from 'react'\n\naxios.defaults.baseURL = 'https://covid19.mathdro.id/api'\n\nexport const useCountries = () => {\n  const [data, setData] = useState([])\n\n  useEffect(() => {\n    const getData = async () => {\n      const { data } = await axios.get('/countries')\n      setData(data.countries.map(({ name }) => name))\n    }\n    getData()\n  }, [])\n\n  return data\n}\n\nexport const useCountryData = (country) => {\n  const [data, setData] = useState(null)\n\n  useEffect(() => {\n    const getData = async () => {\n      const { data } = await axios.get(country ? `/countries/${country}` : '/')\n      setData({\n        country: country || 'the World',\n        confirmed: data.confirmed.value,\n        recovered: data.recovered.value,\n        deaths: data.deaths.value,\n        lastUpdate: data.lastUpdate,\n      })\n    }\n    getData()\n  }, [country])\n\n  return data\n}\n\nexport const useDailyData = () => {\n  const [data, setData] = useState([])\n\n  useEffect(() => {\n    const getData = async () => {\n      const { data } = await axios.get('/daily')\n      setData(data)\n    }\n    getData()\n  }, [])\n\n  return data\n}\n","import React, { useState, useCallback } from 'react'\nimport { CountryPicker, Cards, Chart } from './Components'\nimport { useCountries, useCountryData, useDailyData } from './api'\nimport Container from '@material-ui/core/Container'\nimport Box from '@material-ui/core/Box'\nimport image from './image.png'\n\nconst App = () => {\n  const [country, setCountry] = useState('')\n  const countries = useCountries()\n  const countryData = useCountryData(country)\n  const dailyData = useDailyData()\n\n  const onCountryChangeHandler = useCallback((value) => {\n    setCountry(value)\n  }, [])\n\n  // console.log({ dailyData, countries, countryData })\n\n  return (\n    <Container>\n      <Box my={10}>\n        <Box mb={5} textAlign='center'>\n          <img src={image} alt='COVID-19' />\n        </Box>\n        <CountryPicker\n          countries={countries}\n          onChange={onCountryChangeHandler}\n        />\n        <Cards countryData={countryData} />\n        <Chart countryData={countryData} dailyData={dailyData} />\n      </Box>\n    </Container>\n  )\n}\n\nexport default App\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport CssBaseline from '@material-ui/core/CssBaseline'\nimport App from './App'\n\nReactDOM.render(\n  <React.StrictMode>\n    <CssBaseline />\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n)\n","module.exports = __webpack_public_path__ + \"static/media/image.d7265326.png\";"],"sourceRoot":""}